#destination
destination.list.alldestinations = List Destinations
destination.country = country
destination.city = city
destination.code = code
destination.create = create destination
destination.created = Destination ({0}, {1}, {2}) was created.
destination.deleted = Destination ({0}, {1}, {2}) was deleted.
destination.updated = Destination ({0}, {1}, {2}) was updated.
destination.outcoming = leaving flights
destination.incoming = arriving flights
destination.list.outcoming = Showing all flights destined to leave from the selected destination with id {0}.
destination.list.incoming = Showing all flights destined to arrive at the selected destination with id {0}.
destinationWithId = Destination with id: 
destination.leavingFlights = Flights leaving from
destination.arrivingFlights = Flights landing at
destination.error.service=Error destination service providing: ({2})
destination.error.unknown=Unknown error(destination): ({2})

#flight
flight.departureTime = Departure 
flight.arrivalTime = Arrival
flight.origin = Origin City
flight.target = Target City
flight.airplane = Airplane
flight.stewards = Stewards
flight.edit = Edit
flight.delete = Delete
flight.list.allflights = Flights
flight.create = Create flight
flight.add.message = Flight added
flight.delete.message = Flight deleted
flight.noStewards = No stewards
flight.chooseOne = Choose One
flight.removeSteward = Remove
flight.error.service = Error flight service providing: ({2})
flight.error.uknown= Uknown error(flight): ({2})
flights.of.airplane = Flights of airplane
flight.find = Find flight
flight.create = Create flight
flight.added=Flight ({0} -> {1}) was created.
flight.removed=Flight ({0} -> {1}) was removed.
flight.saved=Flight ({0} -> {1}) was saved.

#all-common
index.title=Airport Manager
id = ID
edit = edit
delete = delete
create = create
save = Save
cancel = cancel
operations = Operations
airplane = Airplane
steward = Steward
destination = Destination
flight = Flight
list = list
page.authors=Authors
page.fimu=Jagiellonian University, Faculty of Mathematics and Information Technologies
flight.time=Time
welcome=Welcome to Airport Manager!
username=Username
password=Password
login=Log in

#airplane
airplane.list.allairplanes = List of airplanes
airplane.find=Find airplane
airplane.capacity = Capacity
airplane.name = Name
airplane.type = Type
airplane.title = Airplanes
airplane.create = Create airplane
airplane.created = Airplane was created
airplane.deleted = Airplane was deleted
airplane.updated = Airplane was updated
airplane.edit = Edit airplane
airplane.error = Error : {2}
listFlights = List flights

#steward
steward.edit.save=Save steward
steward.create.add=Add steward
steward.cancel=Cancel
steward.flights.title=Stewards flights
steward.flights.take=Take flight
steward.flights.add=Add flight
steward.created=Steward ({0}, {1}) has been created
steward.deleted=Steward ({0}, {1}) has been deleted
steward.updated=Steward ({0}, {1}) has been updated
steward.error.service=Error steward service providing: ({2})
steward.error.uknown=Uknown error(steward): ({2})
steward.find=Find steward
steward.editcreate=Steward
steward.flight.taken=Stewards flight ({0} -> {1}) was removed.
steward.flight.added=Flight ({0} -> {1}) was added to stewards flights.
steward.title=Stewards list
steward.delete=Delete
steward.edit=Edit
steward.firstname=First name
steward.lastname=Last name
steward.flights=Stewards flights
steward.create.new=Create new steward
steward.edit.title=Edit steward
steward.create.title=Create steward

# Resource strings used by the <stripes:errors> tag when there are no nested tags
stripes.errors.header=<div class="errorbox" style="border: 0px solid darkgray; font-size: 1.1em; background-color: yellow; margin: 1em; padding: 1em;">Please fix the following errors:<ul>
stripes.errors.beforeError=<li>
stripes.errors.afterError=</li>
stripes.errors.footer=</ul></div>

# Resource strings used by the <stripes:errors> tag when displaying errors for a
# specific field (e.g. <stripes:errors field="password"/>). If not supplied the
# values above will be used instead.
stripes.fieldErrors.header=
stripes.fieldErrors.beforeError=<span style="color: #b72222;">
stripes.fieldErrors.afterError=</span><br />
stripes.fieldErrors.footer=

# Resource strings used by the stripes:messages tag
stripes.messages.header=<div class="messages" style="border: 0px solid darkgray; font-size: 1.1em; background-color: rgb(0,255,0); margin: 0.9em; padding: 1em;"><ul>
stripes.messages.beforeMessage=<li>
stripes.messages.afterMessage=</li>
stripes.messages.footer=</ul></div>

# Validation error messages produced by Stripes' built-in converter classes. These
# are default error messages and can be overridden on per-field and per-form levels.
# Using the 'invalidNumber' error for a field 'age' of a form posting to
# '/user/Profile.action', the keys looked for (in order) would be:
#      1: /user/Profile.action.age.invalidNumber
#      2: /user/Profile.action.age.errorMessage
#      3: age.errorMessage
#      4: /user/Profile.action.invalidNumber
#      5: converter.number.invalidNumber
converter.number.invalidNumber=The value ({1}) entered in field {0} must be a valid number
converter.byte.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.short.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.integer.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.float.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.enum.notAnEnumeratedValue=The value "{1}" is not a valid value for field {0}
converter.date.invalidDate=The value ({1}) entered in field {0} must be a valid date
converter.email.invalidEmail=The value ({1}) entered is not a valid email address
converter.creditCard.invalidCreditCard=The value ({1}) entered is not a valid credit card number

# Validation error messages produced by Stripes' annotation based validations. These
# are default error messages and can be overridden on per-field and per-form levels.
# Using the 'valueNotPresent' required field error for a field 'username' of a form
# posting to '/user/Register.action', the keys looked for (in order) would be:
#      1: /user/Register.action.username.valueNotPresent
#      2: /user/Register.action.username.errorMessage
#      3: username.errorMessage
#      4: /user/Register.action.valueNotPresent
#      5: validation.required.valueNotPresent
validation.required.valueNotPresent={0} is a required field
validation.minlength.valueTooShort={0} must be at least {2} characters long
validation.maxlength.valueTooLong={0} must be no more than {2} characters long
validation.minvalue.valueBelowMinimum=The minimum allowed value for {0} is {2}
validation.maxvalue.valueAboveMaximum=The maximum allowed value for {0} is {2}
validation.mask.valueDoesNotMatch=<em>{1}</em> is not a valid {0}
validation.expression.valueFailedExpression=The value supplied ({1}) for field {0} is invalid
validation.file.postBodyTooBig=Total upload size of {3} KB exceeds the maximum size of {2} KB

#registration
registration.title=Registration
registration.passwords.not.equals=Password and confirmed password must be same.
registration.username.exists=Username {2} already exists.
registration.error=Unknown error.
registration.username.invalid=Invalid user name {2}. Only alphanumeric characters allowed.
registration.successful=Registration {0} successful.
logout=Log out
registration=Sign in new user
passwordconf=Confirm password
